name: saar-biotech-next-cicd-pipeline
run-name: ${{ github.actor }} is executing the pipeline. Branch Name is ${{ github.ref }}

on:
  push:  
  workflow_run:
    workflows: ["ftp-deploy-workflow"]
    types:
      - manual

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Print Branch Name
        run: echo "The branch name running is_ GitHub Ref - ${{ github.ref }}  ${{github.event.workflow_run.head_branch}}"
        
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-build-${{ env.cache-name }}-

      - name: Install dependencies
        run: npm install

      - name: Build Website
        run: npm run build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact1
          path: out

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:

      - name: Manual Approval Step
        if: |
          github.event_name == 'workflow_run' &&
          github.event.workflow == 'ftp-deploy-workflow' &&
          github.event.workflow_run.conclusion == 'success' &&
          startsWith(github.event.workflow_run.head_branch, 'sandeepsaar')
        run: echo "This step requires manual approval for release branches $github.event.workflow_run.head_branch. N"

      - name: FTP Deploy
        if: |
          github.event.workflow_run.conclusion == 'success' &&
          !startsWith(github.event.workflow_run.head_branch, 'sandeepsaar')
        run: |          
          echo "FTP deployment logic... $github.event.workflow_run.head_branch. N"
        
      - name: Manual Trigger For GoDaddy
        id: manual_deploy
        run: echo "Deploy is a manual step. Use the 'workflow_dispatch' event to trigger it."

      - uses: actions/download-artifact@v4
        with:
          name: my-artifact1
          path: myCustomFolder

      - name: Display structure of downloaded files
        run: ls -R

      - name: Set FTP Variables
        env:
          FTP_USERNAME_UAT: ${{ secrets.GODADDY_FTP_NODE_UAT_USER }}
          FTP_PASSWORD_UAT: ${{ secrets.GODADDY_FTP_NODE_UAT_PASSWORD }}
        id: set-ftp-vars
        run: |
          echo $FTP_USERNAME_UAT        
          echo $FTP_USERNAME_UAT | sed -e 's/\(.\)/\1 /g'

          branch_name=$(echo $GITHUB_REF | awk -F'/' '{print $NF}')
          echo "Branch Name is $branch_name"
          if [ "$branch_name" = "Next-App" ]; then
            FTP_USERNAME=$FTP_USERNAME_UAT
            FTP_PASSWORD=$FTP_PASSWORD_UAT
            echo "Using FTP User from main as $FTP_USERNAME"
            echo "V_FTP_USERNAME=$FTP_USERNAME" >> $GITHUB_OUTPUT
            echo "V_FTP_PASSWORD=$FTP_PASSWORD" >> $GITHUB_OUTPUT
          else         
            FTP_USERNAME=$FTP_USERNAME_UAT
            FTP_PASSWORD=$FTP_PASSWORD_UAT
            echo "Using FTP User from other as $FTP_USERNAME"
            echo "V_FTP_USERNAME=$FTP_USERNAME" >> $GITHUB_OUTPUT
            echo "V_FTP_PASSWORD=$FTP_PASSWORD" >> $GITHUB_OUTPUT
          fi

          FTP_SERVER="ftp.alenslim.co.in"
          echo "Using $FTP_SERVER $FTP_USERNAME $FTP_PASSWORD"
          echo "V_FTP_ERVER=$FTP_SERVER" >> $GITHUB_OUTPUT

      - name: FTP Deploy to Go Daddy using Deploy Action
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ steps.set-ftp-vars.outputs.V_FTP_ERVER }}
          username: ${{ steps.set-ftp-vars.outputs.V_FTP_USERNAME }}
          password: ${{ steps.set-ftp-vars.outputs.V_FTP_PASSWORD }}
          local-dir: myCustomFolder/
          log-level: standard
