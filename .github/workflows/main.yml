name: saar-biotech-pipeline
run-name: Actor - ${{ github.actor }}, trigger - ${{ github.event_name }}, branch - ${{ github.ref }}

on:
  push:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Print Branch Name
        run: echo "The branch name running is_ GitHub Ref - ${{ github.ref }}  ${{github.event.workflow_run.head_branch}}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-build-${{ env.cache-name }}-

      - name: Install dependencies
        run: npm install

      - name: Build Website
        run: npm run build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact1
          path: out

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Displaying Variables
        run: |
          echo "Displaying some variables"
          echo "Event Name ${{github.event_name}}"
          echo "Event Worklfow ${{github.event.workflow}}"

      - name: Define Variable for deciding the manual path
        id: set-env-vars
        run: |
          RELEASE_TRIGGER=false
          RELEASE_TAG=false

          echo "Name: ${{ github.event_name}}"
          echo "Comp With Refs: ${{ startsWith(github.ref, 'refs') }}"
          echo "Comp With Tags: ${{ startsWith(github.ref, 'refs/tags') }}"
          echo "Comp With Rele: ${{ startsWith(github.ref, 'refs/tags/release-') }}"
          echo "Github: ${{github.ref}}"          

          if [[ ${{ startsWith(github.ref, 'refs/tags/release-') }} == true ]]; then            
            echo "The branch start with tags (release). Marking it for production"
            RELEASE_TAG=true            
          fi

          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            echo "This is a manual trigger."
            RELEASE_TRIGGER=true
          fi            
           
          echo "V_RELEASE_TRIGGER=$RELEASE_TRIGGER" >> $GITHUB_OUTPUT
          echo "V_RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT

          echo "Release Trigger Vars: $RELEASE_TRIGGER ${{ steps.set-env-vars.outputs.V_RELEASE_TRIGGER }}"
          echo "Release Tag Vars: $RELEASE_TAG ${{ steps.set-env-vars.outputs.V_RELEASE_TAG }}"

      - uses: actions/download-artifact@v4
        with:
          name: my-artifact1
          path: myCustomFolder

      - name: Display structure of downloaded files
        run: ls -R

      - name: Set FTP Variables
        env:
          FTP_USERNAME_UAT: ${{ secrets.GODADDY_FTP_NODE_UAT_USER }}
          FTP_PASSWORD_UAT: ${{ secrets.GODADDY_FTP_NODE_UAT_PASSWORD }}
          FTP_USERNAME_PROD: ${{ secrets.GODADDY_FTP_NODE_PROD_USER }}
          FTP_PASSWORD_PROD: ${{ secrets.GODADDY_FTP_NODE_PROD_PASSWORD }}
        id: set-ftp-vars
        run: |
          echo $FTP_USERNAME_UAT        
          echo $FTP_USERNAME_UAT | sed -e 's/\(.\)/\1 /g'

          echo "Release Trigger Vars: ${{ steps.set-env-vars.outputs.V_RELEASE_TRIGGER }}"
          echo "Release Tag Vars: ${{ steps.set-env-vars.outputs.V_RELEASE_TAG }}"

          FTP_USERNAME=$FTP_USERNAME_UAT
          FTP_PASSWORD=$FTP_PASSWORD_UAT
          if [ ${{ steps.set-env-vars.outputs.V_RELEASE_TAG }} == false ]; then
            echo "Using FTP User from non release branch as $FTP_USERNAME"
          else                     
            echo "Using FTP User from release branch as $FTP_USERNAME"            
            FTP_USERNAME=$FTP_USERNAME_PROD
            FTP_PASSWORD=$FTP_PASSWORD_PROD
          fi

          echo "V_FTP_USERNAME=$FTP_USERNAME" >> $GITHUB_OUTPUT
          echo "V_FTP_PASSWORD=$FTP_PASSWORD" >> $GITHUB_OUTPUT

          FTP_SERVER="ftp.alenslim.co.in"
          echo "Using $FTP_SERVER $FTP_USERNAME $FTP_PASSWORD"
          echo "V_FTP_ERVER=$FTP_SERVER" >> $GITHUB_OUTPUT

      - name: Display Variables before FTP
        run: |
          echo " 0 ${{ steps.set-env-vars.outputs.V_RELEASE_TAG }} 0"
          echo " 1 ${{ steps.set-env-vars.outputs.V_RELEASE_TRIGGER }} 1"
          echo " 2 ${{ steps.set-env-vars.outputs.V_RELEASE_TRIGGER == 'true'}} 2"
          echo " 3 ${{ steps.set-env-vars.outputs.V_RELEASE_TRIGGER == 'false'}} 3" 
          echo " 4 ${{ steps.set-env-vars.outputs.V_RELEASE_TAG == 'true'}} 4" 
          echo " 5 ${{ steps.set-env-vars.outputs.V_RELEASE_TAG == 'false'}} 5" 
          echo " 6 ${{ steps.set-env-vars.outputs.V_RELEASE_TAG == 'false' || steps.set-env-vars.outputs.V_RELEASE_TRIGGER == 'true' }} 6"

      - name: FTP Deploy to Go Daddy using Deploy Action
        if: ${{ steps.set-env-vars.outputs.V_RELEASE_TAG == 'false' || steps.set-env-vars.outputs.V_RELEASE_TRIGGER == 'true' }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ steps.set-ftp-vars.outputs.V_FTP_ERVER }}
          username: ${{ steps.set-ftp-vars.outputs.V_FTP_USERNAME }}
          password: ${{ steps.set-ftp-vars.outputs.V_FTP_PASSWORD }}
          local-dir: myCustomFolder/
          log-level: standard
